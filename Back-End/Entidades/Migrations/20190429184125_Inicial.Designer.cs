// <auto-generated />
using System;
using Entidades;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entidades.Migrations
{
    [DbContext(typeof(EntidadesDbContext))]
    [Migration("20190429184125_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entidades.Auto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Marca")
                        .HasMaxLength(80);

                    b.Property<string>("Matricula")
                        .HasMaxLength(30);

                    b.Property<string>("Modelo")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("Autos");
                });

            modelBuilder.Entity("Entidades.AutoAutomivilista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AutoId");

                    b.Property<Guid>("AutomovilistaId");

                    b.HasKey("Id", "AutoId", "AutomovilistaId");

                    b.HasIndex("AutoId");

                    b.HasIndex("AutomovilistaId");

                    b.ToTable("AutosAutomivilistas");
                });

            modelBuilder.Entity("Entidades.Automovilista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasMaxLength(30);

                    b.Property<byte>("Puntos");

                    b.HasKey("Id");

                    b.ToTable("Automovilistas");
                });

            modelBuilder.Entity("Entidades.Multa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100);

                    b.Property<byte>("PuntosMenos");

                    b.HasKey("Id");

                    b.ToTable("Multas");
                });

            modelBuilder.Entity("Entidades.MultaAutoAutomivilista", b =>
                {
                    b.Property<int>("MultaId");

                    b.Property<int>("AutoAutomivilistaId");

                    b.Property<DateTime>("Fecha");

                    b.Property<bool>("Pagada");

                    b.HasKey("MultaId", "AutoAutomivilistaId");

                    b.HasIndex("AutoAutomivilistaId");

                    b.ToTable("MultasAutoAutomivilistas");
                });

            modelBuilder.Entity("Entidades.AutoAutomivilista", b =>
                {
                    b.HasOne("Entidades.Auto", "Auto")
                        .WithMany("AutosAutomivilistas")
                        .HasForeignKey("AutoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entidades.Automovilista", "Automovilista")
                        .WithMany("AutosAutomivilistas")
                        .HasForeignKey("AutomovilistaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entidades.MultaAutoAutomivilista", b =>
                {
                    b.HasOne("Entidades.AutoAutomivilista", "AutoAutomivilista")
                        .WithMany("MultasAutoAutomivilistas")
                        .HasForeignKey("AutoAutomivilistaId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entidades.Multa", "Multa")
                        .WithMany("MultasAutoAutomivilistas")
                        .HasForeignKey("MultaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
